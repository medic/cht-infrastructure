- name: Add system group
  group:
    name: "{{ django_system_group }}"
    state: present

- name: Add system user
  user:
    name: "{{ django_system_user }}"
    shell: /bin/bash
    group: "{{ django_system_group }}"
    append: yes
    createhome: yes

- name: Add Python PPA
  apt_repository:
    repo: "{{ django_apt_python_ppa }}"
    state: present
  become: true
  become_user: root
  when: django_apt_python_ppa is defined and django_apt_python_ppa != ""

- name: Update apt cache
  apt:
    update_cache: "yes"

- name: Add NodeSource repository for nodejs and npm
  shell: curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -

- name: Install system-wide dependencies
  apt:
    name: "{{ django_system_wide_dependencies }}"
    state: latest
    update_cache: yes
    cache_valid_time: 600

- name: Delete virtualenv
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - "{{ django_venv_path }}"
  when: django_recreate_virtual_env

- name: Ensure required directories are present
  file:
    state: directory
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    path: "{{ item }}"
  when:
    - item is defined
    - item is not none
  with_items:
    - "{{ django_pid_socks_dir }}"
    - "{{ django_versioned_path }}"
    - "{{ django_venv_path }}"
    - "{{ django_log_path }}"
    - "{{ django_system_user_home }}/.ssh"

- name: Git clone without key
  git:
    accept_hostkey: "yes"
    repo: "{{ django_git_url }}"
    dest: "{{ django_checkout_path }}"
    version: "{{ django_git_version }}"
    depth: 1
    force: True
  become: True
  become_user: "{{ django_system_user }}"
  when:
    - django_git_key is not defined or django_git_key is none

- name: Upgrade pip to latest version
  pip:
    name: pip
    state: latest

- name: Install Python packages using pip
  pip:
    state: present
    requirements: "{{ item }}"
    virtualenv: "{{ django_venv_path }}"
    virtualenv_python: "{{ django_python_version }}"
  become_user: "{{ django_system_user }}"
  with_items: "{{ django_pip_paths }}"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
  when:
    - django_use_regular_old_pip == True

- name: Install pipenv
  pip:
    name: pipenv
    state: latest
    virtualenv: "{{ django_venv_path }}"
    virtualenv_python: "{{ django_python_version }}"
  become_user: "{{ django_system_user }}"
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin"
  when:
    - django_use_pipenv == True

- name: Install Python packages using pipenv
  shell: source {{ django_venv_path }}/bin/activate && pipenv sync --python {{ django_python_source_version }}
  become_user: "{{ django_system_user }}"
  args:
    chdir: "{{ django_checkout_path }}"
    executable: /bin/bash
  when:
    - django_use_pipenv == True

- name: Install other python packages using pip
  pip:
    name: "{{ django_pip_packages }}"
    state: latest
    virtualenv: "{{ django_venv_path }}"
    virtualenv_python: "{{ django_python_version }}"
  become_user: "{{ django_system_user }}"

- name: Install phantomjs with permission fix
  command: bash -lc "sudo npm install phantomjs@2.1.1 --unsafe-perm"
  args:
    chdir: "{{ django_checkout_path }}"

- name: Install npm dependencies
  shell: npm i
  args:
    chdir: "{{ django_checkout_path }}"

- name: Install "less" node.js package globally.
  community.general.npm:
    name: less
    global: yes

- name: Make sure the app directory exists
  file:
    name: "{{ django_checkout_path }}/medic"
    state: directory
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    mode: 0755

- name: Copy local settings from template
  template:
    src: "{{ django_settings_template_path }}"
    dest: "{{ django_local_settings_path }}"
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    mode: 0644

- name: Copy the environment script
  template:
    src: "django_checkout_path/django_environment_script_name.j2"
    dest: "{{ django_checkout_path }}/{{ django_environment_script_name }}"
    owner: "{{ django_system_user }}"
    group: "{{ django_system_group }}"
    mode: 0750


